/* OUTPUT ONE CHARACTER TO CONSOLE */

PUTCH: PROC<CHOUT,,>
  DCL CHOUT
$ JSR $F018
  RETURN
  END

/* GET ONE CHARACTER FROM CONSOLE, WITH ECHO */

GETCH: PROC
$ JSR $F012
  RETURN
  END

/* OUTPUT Z-STRING TO CONSOLE */

/*
PUTS: PROC<,,PTSSTR>
  DCL PTSSTR BIN(2)
  DCL RDC BIN BASED
  DO WHILE PTSSTR->RDC NE 0
    CALL PUTCH<PTSSTR->RDC>
    PTSSTR = PTSSTR + 1
    END
  RETURN
  END
*/

PUTS: PROC(PTSARG)
  DCL PTSARG BIN(2)
  DCL PTSSTR BIN(2)
  DCL RDC BIN BASED
  dcl AA
  PTSSTR = PTSARG ! -> IS BROKEN ON BY REF ARGS
  DO WHILE PTSSTR->RDC NE 0
    CALL PUTCH<PTSSTR->RDC>
    PTSSTR = PTSSTR + 1
    END
  CALL PUTCH<$0A>
  RETURN
  END

/* GET Z-STRING FROM CONSOLE */

/*
GETS: PROC<,,GTSSTR>
 DCL GTSSTR BIN(2)
 DCL WRC BIN BASED
 DCL GC
 CALL GETCH GIVING<GC>
 DO WHILE GC NE $0D
   GTSSTR->WRC = GC
   GTSSTR = GTSSTR + 1
   CALL GETCH GIVING<GC>
   END
 GTSSTR -> WRC = 0
 CALL PUTCH<$0A>
 RETURN
 END
*/

GETS: PROC(GTSARG)
 DCL GTSARG BIN(2)
 DCL GTSSTR BIN(2)
 DCL WRC BIN BASED
 DCL GC
 GTSSTR = GTSARG ! -> IS BROKEN ON BY REF ARGS
 CALL GETCH GIVING<GC>
 DO WHILE GC NE $0D
   GTSSTR->WRC = GC
   GTSSTR = GTSSTR + 1
   CALL GETCH GIVING<GC>
   END
 GTSSTR -> WRC = 0
 CALL PUTCH<$0A>
 RETURN
 END

HELLO: PROC OPTIONS(MAIN)

  DCL MSG(40) CHAR INIT('H', 'E', 'L', 'L', 'O', ',', ' ',
                        'W', 'O', 'R', 'L', 'D', $21, 0)

  DCL ENT(40) CHAR INIT('E', 'N', 'T', 'E', 'R', ' ', 'A',
                        ' ', 'S', 'T', 'R', 'I', 'N', 'G', '>', 0)

  DCL CRLF(3) CHAR INIT($0D, $0A, 00)

  CALL PUTS(ADDR(MSG))
  CALL PUTS(ADDR(CRLF))

  CALL PUTS(ADDR(ENT))
  ! CALL GETS<,,ADDR(MSG)>
  CALL GETS(ADDR(MSG))
  CALL PUTS(ADDR(MSG))
  CALL PUTS(ADDR(CRLF))

  CALL MDOS

  END
